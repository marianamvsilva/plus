{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Dropbox/Sites/plus/3/class-11/end/src/City.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport CityTemperature from \"./CityTemperature\";\nimport Loader from 'react-loader-spinner';\nimport \"./City.css\";\nexport default class City extends Component {\n  constructor(props) {\n    super(props);\n\n    this.icon = () => {\n      return React.createElement(\"img\", {\n        src: \"http://openweathermap.org/img/w/\".concat(this.state.icon, \".png\"),\n        alt: this.state.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    };\n\n    this.state = {\n      loaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  refresh() {\n    let key = '5f472b7acba333cd8a035ea85a0d4d4c';\n    let url = \"https://api.openweathermap.org/data/2.5/weather?appid=\".concat(key, \"&units=metric&q=\").concat(this.props.name);\n    axios.get(url).then(response => {\n      this.setState({\n        loaded: true,\n        city: response.data.name,\n        icon: response.data.weather[0].icon,\n        description: response.data.weather[0].main,\n        temperature: Math.round(response.data.main.temp)\n      });\n    });\n  }\n\n  render() {\n    if (this.state.loaded) {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.state.city), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(CityTemperature, {\n        temperature: this.state.temperature,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.icon()), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.state.description), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.refresh(),\n        className: \"btn btn-outline-primary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Refresh\")));\n    } else {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        type: \"ThreeDots\",\n        color: \"#000\",\n        height: \"40\",\n        width: \"40\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/matt/Dropbox/Sites/plus/3/class-11/end/src/City.js"],"names":["React","Component","axios","CityTemperature","Loader","City","constructor","props","icon","state","description","loaded","componentDidMount","refresh","key","url","name","get","then","response","setState","city","data","weather","main","temperature","Math","round","temp","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,YAAP;AAGA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAC1CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyBnBC,IAzBmB,GAyBZ,MAAM;AACX,aAAO;AAAK,QAAA,GAAG,4CAAqC,KAAKC,KAAL,CAAWD,IAAhD,SAAR;AAAoE,QAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,WAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KA3BkB;;AAEjB,SAAKD,KAAL,GAAa;AACXE,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL;AACD;;AAEDA,EAAAA,OAAO,GAAG;AACR,QAAIC,GAAG,GAAG,kCAAV;AACA,QAAIC,GAAG,mEAA4DD,GAA5D,6BAAkF,KAAKP,KAAL,CAAWS,IAA7F,CAAP;AACAd,IAAAA,KAAK,CAACe,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAqBC,QAAD,IAAc;AAChC,WAAKC,QAAL,CAAc;AACZT,QAAAA,MAAM,EAAE,IADI;AAEZU,QAAAA,IAAI,EAAEF,QAAQ,CAACG,IAAT,CAAcN,IAFR;AAGZR,QAAAA,IAAI,EAAEW,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsB,CAAtB,EAAyBf,IAHnB;AAIZE,QAAAA,WAAW,EAAES,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsB,CAAtB,EAAyBC,IAJ1B;AAKZC,QAAAA,WAAW,EAAEC,IAAI,CAACC,KAAL,CAAWR,QAAQ,CAACG,IAAT,CAAcE,IAAd,CAAmBI,IAA9B;AALD,OAAd;AAOD,KARD;AASD;;AAMDC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKpB,KAAL,CAAWE,MAAf,EAAuB;AACrB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKF,KAAL,CAAWY,IAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AACE,QAAA,WAAW,EAAE,KAAKZ,KAAL,CAAWgB,WAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKjB,IAAL,EAAL,CARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,KAAL,CAAWC,WADd,CATF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,OAAO,EAAE,MAAM,KAAKG,OAAL,EADjB;AAEE,QAAA,SAAS,EAAC,gCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAZF,CADF;AAuBD,KAxBD,MAwBO;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,WADP;AAEI,QAAA,KAAK,EAAC,MAFV;AAGI,QAAA,MAAM,EAAC,IAHX;AAII,QAAA,KAAK,EAAC,IAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAYC;AACF;;AArEyC","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport CityTemperature from \"./CityTemperature\";\nimport Loader from 'react-loader-spinner'\nimport \"./City.css\";\n\n\nexport default class City extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false\n    }\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  refresh() {\n    let key = '5f472b7acba333cd8a035ea85a0d4d4c';\n    let url = `https://api.openweathermap.org/data/2.5/weather?appid=${key}&units=metric&q=${this.props.name}`\n    axios.get(url).then((response) => {\n      this.setState({\n        loaded: true,\n        city: response.data.name,\n        icon: response.data.weather[0].icon,\n        description: response.data.weather[0].main,\n        temperature: Math.round(response.data.main.temp),\n      });\n    })\n  }\n\n  icon = () => {\n    return <img src={`http://openweathermap.org/img/w/${this.state.icon}.png`} alt={this.state.description} />;\n  }\n\n  render() {\n    if (this.state.loaded) {\n      return (\n        <tr>\n          <td>{this.state.city}</td>\n          <td>\n            <CityTemperature\n              temperature={this.state.temperature}\n            />\n       \n          </td>\n          <td>{this.icon()}</td>\n          <td>\n            {this.state.description}\n          </td>\n          <td>\n            <button\n              onClick={() => this.refresh()}\n              className=\"btn btn-outline-primary btn-sm\"\n            >\n              Refresh\n            </button>\n          </td>\n        </tr>\n      )\n    } else {\n    return (\n      <tr>\n        <td colSpan=\"4\">\n          <Loader \n            type=\"ThreeDots\"\n              color=\"#000\"\n              height=\"40\" \n              width=\"40\"\n          />\n        </td>\n      </tr>\n      );\n    }\n  } \n}\n"]},"metadata":{},"sourceType":"module"}